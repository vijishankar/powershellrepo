{
  "description": "<group_desc>",
  "name": "<group_name>",
  "id": "<group_id>",
  "variables": {
    "solution": "<prefix>",
    "isDr": "<DR>",
    "subscription": "<subscription>",
    "aksResourceGroup": "<ToUpper(prefix)>-AKS",
    "networkResourceGroup": "<ToUpper(prefix)>-Network",
    "ActiveMQPrivateLink": "<prefix>-activemq-plink",
    "ApplicationInsightsName": "<ToUpper(prefix)>-USSAAS-AppInsights",
    "adminUsername": "alice",
    "agentPool": "<pool>",
    "appGatewayName": "ingress-appgw",
    "publicIPAddressesSku": "Standard",
    "artifactStorageAccountName": "<primaryprefix>teminfas623",
    "artifactStorageAccountType": "<StorageType>",
    "AzureConnection": "<AzDoConnection>",
    "BuildVMResourceGroup": "<ToUpper(prefix)>-Build",
    "coreResourceGroup": "<ToUpper(prefix)>-Core",
    "originCoreResourceGroup": "<ToUpper(primaryprefix)>-Core",
    "crName": "<primaryprefix>cr",
    "SourcecrName": "<sourcecrname>",
    "Sourcecr-rgName":"<sourcergname>",
    "SourceStoragename": "<sourcesaname>",
    "devOpsServer": "https://dev.azure.com/<OrgName>",
    "diagnosticsName": "SKNY-USSAAS-Diag",
    "automationAccountName": "<prefix>-automation",
    "diskConfigurationAautomationRunbookName": "Configure-Disk",
    "environmentClass": "<CLASS>",
    "deploywaf": "<deploywaf>",
    "eventhubNamespace": "<prefix>deshub",
    "eventhubNamespaceCI": "<prefix>deshubCI",
    "originEventhubNamespace": "<primaryprefix>deshub",
    "originEventhubNamespaceCI": "<primaryprefix>deshubCI",
    "eventhubFogName": "<primaryprefix>-hub",
    "eventhubFogNameCI": "<primaryprefix>-hubCI",
    "eventhubZoneRedundancy": "<eventhubZoneRedundancy>",
    "topicPartitionCount": 4,
    "goversion": "1.14.1",
    "GOOS": "linux",
    "GO111MODULE": "on",
    "GOPATH": "$(Pipeline.Workspace)/gotests/test",
    "GOBIN": "$(Pipeline.Workspace)/gotests/test/bin",
    "infinityNetworkResourceGroup": "<ToUpper(prefix)>-Network",
    "transactNetworkResourceGroup": "<ToUpper(prefix)>-Network",
    "infinityNetwork": "<ToUpper(prefix)>-Network",
    "transactNetwork": "<ToUpper(prefix)>-Network",
    "ingressResourceGroupName": "<ToUpper(prefix)>-Ingress",
    "ingressVNetAddressSpace": "<IngressAddressSpace>",
    "ingressVNetName": "<ToUpper(prefix)>-Ingress",
    "integrationDnsZone": "privatelink.integration.com",
    "KafkaPrivateLink": "kafka-private-link",
    "KakfaIPAddress": "10.4.31.120",
    "keyVaultId": "/subscriptions/<subscription>/resourceGroups/<ToUpper(prefix)>-Core/providers/Microsoft.KeyVault/vaults/<prefix>kv",
    "keyVaultName": "<prefix>kv",
    "keyVaultUser": "<keyVaultUser>",
    "keyVaultUsers": "<keyVaultUser>,<keyVaultUsers>",
    "keyVaultSku": "Standard",
    "sourceKeyVaultName":"<primaryprefix>kv",
    "laWorkspaceName": "<lalogs>",
    "laWorkspaceSkuName": "PerGB2018",
    "laWorkspaceRGName": "<lalogsrg>",
    "laRetention": 30,
    "location": "<Location>",
    "originLocation":"<OriginLocation>",
    "sshPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDpz6jAiojv9hvgKXlLoqQP0e533c5jLwVyujqHm+aM8GwaivTJ2M0PIvGr4xwgGzZofIP5SyFco2cXR7AxSZf5qWluzWdLh3nbx6A6p1IRR1+jQb3FVBwSEaogLspmh9SmASPtkpGP1XdBd3hTntIPZvF2k8bjPOTKFaoCYptxodKiSYAask9puzz9VthXmXRgDPux9T8shGP9tpcjzpRJqrZSdg+5fK4chWcea3awk42J6ZmypRh+l9SBAoJv8LyYec3Qx0LytlA/jYjzIZvM2OFEigj5f7aLL6Dv29eLvKA0e7FTL+Bwlk9flCpcVBCEJmK1SN1uFBeFa0X7Bh7JDBSxCp9DO1QUBzcezQ7ovR/zG2AMd40by8dwBhrEuG/lODNt8NkxoigJpbHcli13yBMyNlRhvcZMsvZ/DSOwzX9woeCimcbot8i5CrAGMoglEBY19HGc5X1DaNHGK6ey5mJK8YDuH7EQE6uUyIs8LsKR2V55o19FF5XL0Z0qMs/U2ozFV4tR1RkeK0YCsFEBLAszibhDBvsdMIOY9mkHDNAegMIRS1ZUBGEwE4orZAVpnjUV/VN4YP8UgR2ron1vgy4qQH60oXEzlCMJfSOzObPOuJGmn47S0F16fdWwIqx2wF1DrC9aMKwOQ2vC7V9y8evQYo9uIaReM5Su6VD9Lw==",
    "SSLCertificateCommonName": "CN=<prefix>.<dnsname>",
    "SecureFileSSLCertificateName":"ussaas.pfx",
    "storageAccountName": "<prefix>diag",
    "subNetName": "default",
    "TransactIPAddress": "<TransactIPAddress>",
    "vaultName": "sharedRSV001",
    "wildFlyLinuxFileTypeLogPaths": "/opt/avoka/transact/manager/server/standalone/log/server.log",
    "vNetResourceGroup": "<ToUpper(prefix)>-Network",
    "vNetName": "<ToUpper(prefix)>-Network",
    "hostingPlanName": "<prefix>hostingplan",
    "AvailabilityTests_FunctionAppName": "TemenosAvailabilityTests",
    "fabricPingURLPaths": "mfconsole/health_check,admin/healthcheck,apiportal/healthcheck,authService,accounts,workspace,apps,services,kpns/service/healthcheck/json",
    "fabricPingTestName": "Fabric-",
    "fabricPingTestAlertName": "PingTestAlertFabric-",
    "healthCheckPingTestName": "AvailabilityFunction",
    "healthCheckPingTestAlertName": "PingTestAlertHealthCheck",
    "actionGroupName": "application insights smart detection",
    "availTestsUrl": "{'BrowserWeb':'url/BrowserWeb/','PaymentApi':'url/irf-provider-container/api/v1.0.0/meta/apis/','FcmVrisk-WS':'url/vrisk/web-services/','FcmVrisk':'url/vrisk/','Analytics-InsightWeb':'url/Temenos.InsightWeb/','Analytics-InsightOData':'url/Temenos.InsightODataService/','JM-Infinity':'url/infinity/','JM-Manager':'url/infinity/'}",
    "enableFunctionAppTests": "true",
    "enableFabricPingTests": "true",
    "enableHealthCheckPingTests": "true",
    "frontDoorName": "<prefix>-fd",
    "gatewayPrivateIP": "<GatewayIP>",
    "domainName": "<ToUpper(prefix)>.<dnsname>",
    "microsvcResourceGroup": "<ToUpper(prefix)>-ms",
    "microServiceSubnetName": "microservices",
    "nuodbContainerName": "nuodbproduction",
    "nuodbFileShareName": "nuodbbackup",
    "sqldbContainerName": "sqldb",
    "storageAccountType": "Standard_LRS",
    "docsimages": "PHOTO,PASSPORT,SECURITY,SIGNATURE,VIDEO,FORMS",
    "check21": "US1.CK21.INW.CLG,US1.CK21.INW.RET,US1.CK21.OUT.EXC,US1.CK21.ARC",
    "billpay": "PAYSAFE.IN,PAYSAFE.ARC,PAYSAFE.ERR,PAYSAFE.RESP,PAYSAFE.ACCT",
    "ach": "ACH-Inward,ACH-Error,ACH-Work,ACH-Archival,ACH-Outward",
    "fidminward": "IN.DIR,OUT.DIR,ARCH.DIR",
    "fidmoutward": "OUT.DIR,ARCH.DIR",
    "fdic": "OUT.DIR",
    "irs": "OUTPUT.DIR",
    "fedwire": "FEDIN,FEDOUT,FEDBK",
    "SuspenseAccount": "<suspenseAccount>",
    "OFSFolder": "<ofsFolder>",
    "JMSTimeout": "10000",
    "GremlinKeyVaultName": "ctsdev",
    "GremlinSecretKeyName": "gremlinsecret",
    "GremlinTeamId": "73e70039-6e67-57fd-9a21-d34411fb3ff0",
    "ingress": {
      "capacity": "1",
      "deployFirewall": "true",
      "deployFrontDoor": "true",
      "deployDDoS": "false",
      "enableAfw": "true",
      "firewallName": "ingress-firewall",
      "frontDoorName": "<prefix>-fd",
      "frontDoorBackendPoolName": "default.backend",
      "gatewaySubnetName": "ApplicationGatewaySubnet",
      "GatewaySubnetPrefix": "<GatewaySubnet>",
      "ResourceGroupName": "<ToUpper(prefix)>-Ingress",
      "sslCertificates": "USSaasWildcard",
      "vNetResourceGroup": "<ToUpper(prefix)>-Ingress",
      "gatewayPrivateIP": "<GatewayIP>",
      "firewallPublicIPAddressesSku": "Standard",
      "analyticsResourceGroup": "<ToUpper(prefix)>-Analytics",
      "wafAnalyticsName": "<ToUpper(prefix)>-Analytics-Waf",
      "wafAnalyticsPolicyMode": "Prevention",
      "appGatewayAutoscaleEnabled": "true",
      "appGatewayMinimumScaleUnits": "<appGatewayMinimumScaleUnits>",
      "appGatewayMaximumScaleUnits": "<appGatewayMaximumScaleUnits>"
    },
    "shared": {
      "agentVMSize": "Standard_D8s_v3",
      "addressSpace": "<AppAddressSpaces>",
      "agentCount": "5",
      "autoScaleMaxNodes": "15",
      "aksName": "aks",
      "availabilityZonesCount": "<azcount>",
      "aksResourceGroup": "<ToUpper(prefix)>-AKS",
      "primaryAksResourceGroup": "<ToUpper(primaryprefix)>-AKS",
      "aksUptimeSLAEnabled": "<aksUptimeSla>",
      "kubernetesVersion": "<sharedAKSVersion>",
      "aksSubnetName": "aks",
      "bastionHostName": "Bastion",
      "vNetResourceGroup": "<ToUpper(prefix)>-Network",
      "originVNetResourceGroup": "<ToUpper(primaryprefix)>-Network",
      "vNetName": "<ToUpper(prefix)>-Network",
      "originVNetName": "<ToUpper(primaryprefix)>-Network", 
      "OriginCoreResourceGroup": "<ToUpper(primaryprefix)>-Core",
      "optionalSubnets": "PrivateLinks, microservices, analytics",
      "privateDNSZones": "<PrivateDNSZones>",
      "privateEndpointSubnetName": "PrivateEndpoints",
      "VNetId": "/subscriptions/<subscription>/resourceGroups/<ToUpper(prefix)>-Network/providers/Microsoft.Network/virtualNetworks/<ToUpper(prefix)>-Network",
      "vmName": "buildvm",
      "vmImageReferenceSku": "18.04-LTS",
      "dnsPrefix": "aksdemo",
      "serviceCidr": "10.2.1.0/24",
      "dnsServiceIP": "10.2.1.5",
      "bastionPublicIpAddressesSku": "Standard",
      "privateCluster": true,
      "networkPolicy": "calico",
      "enableAutoScaling": true
    },
    "fcm": {
      "sslCertName": "USSaasWildcard",
      "AppKeyName": "fcmstoragekey",
      "AppStorageName": "fcmappstg",
      "storageAccountName": "<primaryprefix>fcmdata",
      "appVersion": "202101.0.0",
      "chartVersion": "0.1.15",
      "bastionHostName": "Bastion",
      "databasesResourceGroup": "<ToUpper(prefix)>-FCM-Databases",
      "originDatabasesResourceGroup": "<ToUpper(primaryprefix)>-FCM-Databases",
      "DbName": "fcmsaasdb",
      "dbSchemaName": "USER",
      "dbdependencies": "financial-crime-mitigation-db-<FCMRelease>",
      "fileShareName": "fcmproduction",
      "kubernetesVersion": "<sharedAKSVersion>",
      "nuodbbackup": "FCMNUODB-<FCMRelease>",
      "primary": {
        "nuodbsmcopyreplicas": "<nuodbsmreplicas>",
        "nuodbsmnocopyreplicas": "<nuodbsmreplicas>",
        "nuodbtereplicas": "2"
      },
      "zoneRedundant": "<azsqlzoneredundancy>",
      "ResourceGroup": "<ToUpper(prefix)>-FCM",
      "OriginResourceGroup": "<ToUpper(primaryprefix)>-FCM",
      "vNetResourceGroup": "<ToUpper(prefix)>-Network",
      "originVNetResourceGroup": "<ToUpper(primaryprefix)>-Network", 
      "storageAccountType": "<StorageType>",
      "administratorLogin": "fcmdba",
      "administratorLoginSecretName": "fcmadministratorloginpassword",
      "serverName": "<prefix>fcmsaassql",
      "originServerName": "<primaryprefix>fcmsaassql",
      "fogName": "<primaryprefix>-fogfcmsaassql",
      "sourcefileShareName": "fcmproduction",
      "sourcestorageAccountKeyName": "fcmstoragekey",
      "wafFCMName": "<ToUpper(prefix)>-FCM-Waf",
      "wafFCMPolicyMode": "Prevention",
      "maxReplicas": "<fcmMaxReplicas>",
      "minReplicas": "<fcmMinReplicas>",
      "autoscaling": "<fcmAutoscaling>"
    },
    "sqlmi":  {
      "databasesResourceGroup": "<ToUpper(prefix)>-Databases",
      "originDatabasesResourceGroup": "<ToUpper(primaryprefix)>-Databases",
      "dbSubnetName": "sqlmi",
      "managedInstanceAdminLogin": "sqlmidba",
      "managedInstanceAdminSecretName": "sqlmidbadminsecret",
      "managedInstanceName": "<prefix>sqlmidb",
      "originManagedInstanceName": "<ToUpper(primaryprefix)>sqlmidb",
      "fogname": "<primaryprefix>-sqlmifog",
      "skuname": "BC_Gen5",
      "skutier": "BusinessCritical",
      "vcores": 4,
      "hardwarefamily": "Gen5"
    },
    "transact": {
      "agentVMSize": "Standard_D8s_v3",
      "nuodbAdmin": "dba",
      "nuodbPassword": "dba",
      "nuodbbackup": "TRANSACTNUODB-<Release>",
      "release": "<Release>",
      "primary": {
        "nuodbsmcopyreplicas": "<nuodbsmreplicas>",
        "nuodbsmnocopyreplicas": "<nuodbsmreplicas>",
        "nuodbtereplicas": "2"
      },
      "encryptfilename": "EncryptPassword-shaded.jar",
      "addressSpace": "10.4.15.0/24,10.4.16.0/20,10.4.32.0/24",
      "agentCount": "2",
      "aksName": "transact-aks",
      "aksResourceGroup": "<ToUpper(prefix)>-AKS",
      "chartVersion": "0.3.0",
      "companyId": "US0010001",
      "sqldbbackup": "TRANSACTSQL-<Release>",
      "dbName": "transact1",
      "vmName": "buildvm",
      "VNetId": "/subscriptions/<subscription>/resourceGroups/<ToUpper(prefix)>-Network/providers/Microsoft.Network/virtualNetworks/<ToUpper(prefix)>-Network",
      "vNetName": "<ToUpper(prefix)>-Network",
      "vNetResourceGroup": "<ToUpper(prefix)>-Network",
      "optionalSubnets": "PrivateLinks",
      "privateDNSZones": "acr, blob, file, sql, web, integration",
      "privateEndpointSubnetName": "PrivateEndpoints",
      "dbNameSpace": "<prefix>ms",
      "dbServerName": "<prefix>ms-mysql",
      "sslCertName": "USSaasWildcard",
      "desDbName": "streamdb",
      "wafTransactName": "<ToUpper(prefix)>-Transact-Waf",
      "wafTransactPolicyMode": "Prevention",
      "FileShareAccount": "<primaryprefix>interface",
      "FileShareResourceGroup": "<ToUpper(primaryprefix)>-AKS",
      "DataShares": "dwexport,docsimages,check21,billpay,ach,fidminward,fidmoutward,fdic,irs,fedwire",
      "DataSharesVol": "dwexport@docsimages@check21@billpay@ach@fidminward@fidmoutward@fdic@irs@fedwire",
      "StorageSkuName": "<StorageType>",
      "StorageSkuTier": "Standard",
      "deploySA": "<deployInterfaceSA>",
      "maxReplicas": "<transactMaxReplicas>",
      "minReplicas": "<transactMinReplicas>",
      "autoscaling": "<transactAutoscaling>",
      "desmaxReplicas": "<desMaxReplicas>",
      "desminReplicas": "<desMinReplicas>",
      "desautoscaling": "<desAutoscaling>",
      "desVersion": "<Release>.0.0-HA"
    },
    "activemq": {
      "FileShareAccount": "<prefix>amqfs",
      "DataShares": "activemqdata, activemqdata-int",
      "StorageSkuName": "Standard_LRS",
      "StorageSkuTier": "Standard",
      "deploySA": "<deployAMQSA>",
      "FileShareResourceGroup": "<ToUpper(prefix)>-AKS"
    },
    "sftp": {
      "vmName": "sftp1",
      "vmImageReferenceSku": "18.04-LTS",
      "ftpAdminUsername": "temenos",
      "ftpAdminPassword": "sftppassword",
      "lbName": "sftplb",
      "publicIPAddressesSku": "Standard",
      "deploySftp": "transact,fcm", 
      "FileShareAccount": "<primaryprefix>interface,<primaryprefix>fcmdata", 
      "FileShareResourceGroup": "<ToUpper(primaryprefix)>-AKS,<ToUpper(primaryprefix)>-FCM" 
    },
    "analytics": {
      "databasesResourceGroup": "<ToUpper(prefix)>-Databases",
      "managedInstanceName": "<prefix>sqlmidb",
      "analyticsFileName": "AnalyticsArtefacts.zip",
      "analyticsEtlFileName": "InsightETL.zip",
      "analyticsUrl": "https://<sourcesaname>.blob.core.windows.net/analytics/AnalyticsArtefacts.zip",
      "analyticsEtlUrl": "https://<sourcesaname>.blob.core.windows.net/analytics/InsightETL.zip",
      "storageAccountName": "<primaryprefix>analyticsds",
      "storageAccountType": "<StorageType>",
      "ResourceGroup": "<ToUpper(prefix)>-Analytics",
      "OriginResourceGroup": "<ToUpper(primaryprefix)>-Analytics",
      "containerName0": "analytics",
      "containerName1": "xmlfiles",
      "containerName2": "dwexport",
      "sasTokenName": "analyticssastoken",
      "subnetName": "analytics",
      "VMName": "Analytics",
      "adminUsername": "ssrsadmin",
      "adminPassword": "analyticsvmadminsecret",
      "databasePassword": "sqlmidbadminsecret",
      "vmInstanceType": "Standard_D1_v2",
      "vmImageReferenceSku": "2019-Datacenter",
      "numberOfInstances": "1",
      "appGatewayBEPool": "analytics",
      "wafAnalyticsName": "<ToUpper(prefix)>-Analytics-Waf",
      "wafAnalyticsPolicyMode": "Prevention"
    }
  }
}

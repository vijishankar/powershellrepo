trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
parameters:
- name: groupname
  type: string
  default: './'

- name: groupdesc
  type: string
  default: 'hi all'
  
- name: envName
  displayName: environment Name
  type: string
  default: primary

- name: variablename
  type: string
  default: 'Devops'

- name: variablevalue
  type: string
  default: 'Joe'
- name: database
  displayName: Database
  type: string
  default: SQLMI
  values:
  - NuoDB
  - SQLMI

- name: primary
  displayName: Deploy a primary region ?
  type: boolean
  default: true

- name: secondary
  displayName: Are you deploying a secondary region?
  type: boolean
  default: false

- name: firstrun
  displayName: Import docker images from Source Registry ?
  type: boolean
  default: false

- name: cleanAks
  displayName: Clean AKS from DB and FCM and Transact?
  type: boolean
  default: false

- name: executeLoadDataTests
  displayName: Execute load data and load data tests?
  type: boolean
  default: false

- name: installGremlin
  displayName: Install Gremlin into AKS?
  type: boolean
  default: false

- name: runTests
  displayName: Run IAAC Tests ?
  type: boolean
  default: true

jobs:
  - job: creating_group
    steps:
      - task: PowerShell@2
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        inputs:
          filePath: './setvariables.ps1'
          arguments: 
              -workspace $(Pipeline.Workspace)
              -path ${{parameters.groupname}}
              -bearerToken "$env:SYSTEM_ACCESSTOKEN"
              -organization $(System.CollectionUri)
              -project $(System.TeamProject)
 
  
  - job: templates
    steps:
    - ${{if eq(parameters.primary, true)}}:
    - template: ./coreresources.yml
      parameters:
      firstrun: ${{parameters.firstrun}}
      secondary: ${{parameters.secondary}}
      primary: true
      variableGroup: 'VariableGroupYML'
      envName: primary    
      database: ${{parameters.database}} 
      cleanAks: ${{parameters.cleanAks}}
      dependsOn: [setvariablegroup]
      executeLoadDataTests: ${{parameters.executeLoadDataTests}}
      installGremlin: ${{parameters.installGremlin}}
      runTests: ${{parameters.runTests}}
    
    
